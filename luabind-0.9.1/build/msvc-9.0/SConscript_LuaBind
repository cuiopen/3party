# sln2scons.py autogenerated SConscript
Import('env')
e = env.Clone()
e['CPPDEFINES'] = e['CPPDEFINES'] + ['_UNICODE', 'UNICODE', u'WIN32', u'NDEBUG', u'_LIB']
if not e['MYPLATFORM'] == 'winnt':
    e.Append(LIBS='m')
else:
    pass
    e.Append(CCFLAGS=' /EHsc')
e['CPPPATH'] = ['../../include/', '../../../lua/include/', '../../../boost/include/']

LuaBind = e.StaticLibrary('../../lib/luabind', ['../../include/class.cpp', '../../include/class_info.cpp', '../../include/class_registry.cpp', '../../include/class_rep.cpp', '../../include/create_class.cpp', '../../include/error.cpp', '../../include/exception_handler.cpp', '../../include/find_best_match.cpp', '../../include/function.cpp', '../../include/implicit_cast.cpp', '../../include/link_compatibility.cpp', '../../include/object_rep.cpp', '../../include/open.cpp', '../../include/overload_rep.cpp', '../../include/pcall.cpp', '../../include/ref.cpp', '../../include/scope.cpp', '../../include/stack_content_by_name.cpp', '../../include/weak_ref.cpp', '../../include/wrapper_base.cpp'])
e.Default(LuaBind)
e.Install(Dir('#/' + e['MYPLATFORM'] + '/lib/release'), LuaBind)

if 'distclean' in COMMAND_LINE_TARGETS:
    Execute(Delete('LuaBind'))
    Execute(Delete(Dir('#/' + e['MYPLATFORM'] + '/bin/release').abspath + '/' + str(LuaBind[0])))
    Execute(Delete(Glob('*.o')))
    Execute(Delete(Glob('*.so')))
    Execute(Delete(Glob('*.os')))
    Execute(Delete(Glob('*.a')))
    Execute(Delete(Glob('*.la')))
    Execute(Delete(Glob('*.dylib')))

if 'pack' in COMMAND_LINE_TARGETS:
    Execute(Copy(Dir('#/' + e['MYPLATFORM'] + '/bin/release'), LuaBind[0]))
    e.Alias('pack', Dir('#/' + e['MYPLATFORM'] + '/bin/release'))

